package kono.generated

import kono.app.KonoApplication
import kono.app.KonoApplicationContext
import kono.events.EventHandler
import kono.ipc.FunctionHandler

/**
 * Finds the generated class.
 *
 * While we could implement a fancy algorithm that automatically
 * deduces the name from the type, passing a string directly allows
 * external tools, such as obfuscators, to do their job better.
 */
@Suppress("UNCHECKED_CAST", "DEPRECATION")
private fun <T> generated(name: String): GeneratedItem<T> {
    return Class.forName(name).newInstance() as GeneratedItem<T>
}

/**
 * Represents a getter for a generated item
 */
interface GeneratedItem<T> {
    fun create(app: KonoApplication): T
}

/**
 * Represents the context that is generated by the codegen
 */
object GeneratedAppContext : KonoApplicationContext {

    private val eventHandler by lazy {
        generated<EventHandler>("kono.generated.GeneratedEventHandler")
    }

    private val functionHandler by lazy {
        generated<FunctionHandler>("kono.generated.GeneratedFunctionHandler")
    }

    override fun createFunctionHandler(app: KonoApplication): FunctionHandler {
        return functionHandler.create(app)
    }

    override fun createEventHandler(app: KonoApplication): EventHandler {
        return eventHandler.create(app)
    }

}